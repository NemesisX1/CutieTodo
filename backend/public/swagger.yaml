openapi: 3.0.0
info:
  title: "CutieTodo Docs"
  description: "CutieTodo app's server docs, a server app fully made up with Dart and its http framework Frog."
  version: "1.0.10"
  contact:
    email: juniormedehou@gmail.com
  license:
    name: MIT Licence
    url: https://github.com/NemesisX1/CutieTodo/blob/main/LICENCE
servers:
  - url: http://localhost:8080

tags:
- name: "/"
  description: "Base"
- name: "Auth"
  description: "Access to User data and token"
- name: "Todos"
  description: "Access to Todo data"

components:
  schemas:
    User:
      type: object
      required:
        - username
      properties:
        key:
          type: string
          readOnly: true
        username:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        

    Todo:
      type: object
      required:
        - title
        - description
        - startAt
      properties:
        key:
          type: string
          readOnly: true
        title:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        isDone:
          type: boolean
          default: false
        startAt:
          type: string
          format: date-time
          description: "A timestamp related to the stating date of the task to do"
        endAt:
          type: string
          format: date-time
          description: "A timestamp related to the endign date of the task to do"
        userKey:
          type: string
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true

    
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /:
    get:
      tags:
        - /
      description: 'Simple route to check if server is up'
      responses:
        '200':
          description: OK.


  /auth/login:
    post:
      tags: 
        - Auth      
      description: 'Login the user and give back its data and associated JWT Token'

      parameters:
        - name: username
          in: query
          description: User's username
          schema:
            type: string
          required: true
        - name: password
          in: query
          description: User's password
          schema:
            type: string
          required: true
      
      requestBody:  
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
        required: true
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiresIn:
                    type: number
                    default: 900
                  user:
                    schema:
                    $ref: '#/components/schemas/User'
        '400':
          description: Your body should provide a username and a password fields.
        '401':
          description: Your credentials are not allowed. Bad credentials.
        '404':
          description: This user doesn't exist.
        '405':
          description: This method is not availaible for this route.
  
  /auth/register:
    post:
      tags: 
        - Auth
      description: ''
      parameters:
        - name: username
          in: query
          description: User's username
          schema:
            type: string
          required: true
        - name: password
          in: query
          description: User's password
          schema:
            type: string
          required: true
      requestBody:  
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
        required: true
      responses:
        '201':
          description: User created with success.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/User'
        '400':
          description: Your body should provide a username and a password fields.
        '405':
          description: This method is not availaible for this route.
        '409':
          description: This user already exist.
  
  /todos:
    get:
      tags: 
        - Todos
      description: ''
      security:
        - jwt:
          - related
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
                  
        '400':
          description: Bad Request. You need to provide a bearer token to access this ressources or your body is bad formatted. Look at the response for more details !
  
        '401':
          description: Token expired or Bad formatted token.
          
        '405':
          description: This method is not availaible for this route.
        '409':
          description: This user already exist.
        
    post:
      tags: 
        - Todos
      description: ''
      security:
        - jwt:
          - related
      parameters: []
      requestBody:  
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '201':
          description: User created with success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        '400':
          description: Bad Request. You need to provide a bearer token to access this ressources or your body is bad formatted. Look at the response for more details !
        '401':
          description: Token expired or Bad formatted token.
        '405':
          description: This method is not availaible for this route.
        '422':
          description: An error occured when trying to create data. It is a database issue.
        
        
  /todos/{id}:
    get:
      tags: 
        - Todos
      description: ''
      security:
        - jwt:
          - related
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Todo'
        '401':
          description: Token expired or Bad formatted token.
        '404':
          description: You ressource is was not found !
        '405':
          description: This method is not availaible for this route.
        '422':
          description: An error occured when trying to create data. It is a database issue.
        
    put:
      tags: 
        - Todos
      description: ''
      security:
        - jwt:
          - related
      parameters: []
      requestBody:  
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Todo'
        '401':
          description: Token expired or Bad formatted token.
        '404':
          description: You ressource is was not found !
        '405':
          description: This method is not availaible for this route.

    delete:
      tags: 
        - Todos
      description: ''
      security:
        - jwt:
          - related
      parameters: []
      responses:
        '200':
          description: OK
        '401':
          description: Token expired or Bad formatted token.
        '405':
          description: This method is not availaible for this route.




